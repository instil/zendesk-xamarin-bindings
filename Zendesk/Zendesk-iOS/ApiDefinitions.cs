using System;
using Foundation;
using ObjCRuntime;
using UIKit;

namespace Zendesk {
	// @interface ZDKMessaging : NSObject
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface Messaging
	{
		[Wrap ("WeakDelegate"), Static]
		[NullAllowed]
		ZDKMessagingDelegate Delegate { get; set; }

		// @property (nonatomic, weak, class) id<ZDKMessagingDelegate> _Nullable delegate;
		[Static]
		[NullAllowed, Export ("delegate", ArgumentSemantic.Weak)]
		NSObject WeakDelegate { get; set; }

		// @property (nonatomic, strong, class) ZDKMessaging * _Nullable instance;
		[Static]
		[NullAllowed, Export ("instance", ArgumentSemantic.Strong)]
		Messaging Instance { get; set; }

		// +(void)invalidate;
		[Static]
		[Export ("invalidate")]
		void Invalidate ();

		// -(UIViewController * _Nonnull)messagingViewController __attribute__((warn_unused_result("")));
		[Export ("messagingViewController")]
		UIViewController MessagingViewController { get; }
	}

	// @interface ZendeskSDKMessaging_Swift_1446 (ZDKMessaging)
	[Category]
	[BaseType (typeof(Messaging))]
	interface ZDKMessaging_ZendeskSDKMessaging_Swift_1446
	{
		// +(void)initializeWithChannelKey:(NSString * _Nonnull)channelKey completionHandler:(void (^ _Nullable)(ZDKMessaging * _Nullable, NSError * _Nullable))completionHandler;
		[Static]
		[Export ("initializeWithChannelKey:completionHandler:")]
		void InitializeWithChannelKey (string channelKey, [NullAllowed] Action<Messaging, NSError> completionHandler);
	}

	// @protocol ZDKMessagingDelegate
	[Protocol, Model (AutoGeneratedName = true)]
	[BaseType(typeof(NSObject))]
	interface ZDKMessagingDelegate
	{
		// @required -(BOOL)messaging:(ZDKMessaging * _Nonnull)messaging shouldHandleURL:(NSURL * _Nonnull)url from:(enum ZDKURLSource)source __attribute__((warn_unused_result("")));
		[Abstract]
		[Export ("messaging:shouldHandleURL:from:")]
		bool ShouldHandleURL (Messaging messaging, NSUrl url, ZDKURLSource source);
	}

	// @interface ZDKPushNotifications : NSObject
	[BaseType (typeof(NSObject))]
	[DisableDefaultCtor]
	interface ZDKPushNotifications
	{
		// +(void)updatePushNotificationToken:(NSData * _Nonnull)token;
		[Static]
		[Export ("updatePushNotificationToken:")]
		void UpdatePushNotificationToken (NSData token);

		// +(enum ZDKPushResponsibility)shouldBeDisplayed:(NSDictionary * _Nonnull)userInfo __attribute__((warn_unused_result("")));
		[Static]
		[Export ("shouldBeDisplayed:")]
		ZDKPushResponsibility ShouldBeDisplayed (NSDictionary userInfo);

		// +(void)handleTap:(NSDictionary * _Nonnull)userInfo completion:(void (^ _Nullable)(UIViewController * _Nullable))completion;
		[Static]
		[Export ("handleTap:completion:")]
		void HandleTap (NSDictionary userInfo, [NullAllowed] Action<UIViewController> completion);
	}

	// @interface ZendeskSDKMessaging_Swift_1559 (UIImageView)
	[Category]
	[BaseType (typeof(UIImageView))]
	interface UIImageView_ZendeskSDKMessaging_Swift_1559
	{
		// -(void)nuke_displayWithImage:(UIImage * _Nullable)image;
		[Export ("nuke_displayWithImage:")]
		void Nuke_displayWithImage ([NullAllowed] UIImage image);
	}
}
